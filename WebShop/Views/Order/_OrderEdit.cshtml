@using PerpetuumSoft.Knockout
@model WebShop.ViewModels.OrderViewModel
@{
    Layout = null;
    
    @Scripts.Render("~/bundles/knockout");
    var ko = Html.CreateKnockoutContext("OrderViewModel");
}

@*@using (Html.BeginForm("Save", "Order", FormMethod.Post, new { enctype = "multipart/form-data" }))*@
@using (ko.Html.Form("Save", "Order"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.ClientID, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ClientID, null, new { @class = "form-control", @data_bind = "value: ClientID" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <control-label class="control-label col-md-2">
                Products
                <p>@ko.Html.HyperlinkButton("Add product", "AddOrderItem", "Order")</p>
            </control-label>
            <div class="col-md-10">
                <table>
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Stock</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @using (var item = ko.Foreach(m => m.OrderItems))
                        {
                            <tr>
                                <td>
                                    @Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control", @data_bind = "value : $data.ProductID" })
                                </td>
                                <td>
                                    <input type="number" class="form-control" min="1" max="10" @item.Bind.Value(m => m.Qty) required>
                                </td>
                                <td>
                                    @ko.Html.HyperlinkButton("Delete", "DeleteOrderItem", "Order", new { index = item.GetIndex() }).Visible(m => m.OrderItems.Count > 1)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                You have asked for @ko.Html.Span(m => (m.OrderItems == null) ? 0 : m.OrderItems.Count) products
            </div>
            <div class="col-md-offset-2 col-md-10">
                @ko.Html.Button("Save", "Save", "Order", null, new { @class = "btn btn-default" })
                <input value="Create" type="submit" class="btn btn-default">
            </div>
        </div>
    </div>
}

@ko.Apply(Model)