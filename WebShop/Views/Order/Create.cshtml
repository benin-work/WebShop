@using PerpetuumSoft.Knockout
@model WebShop.ViewModels.OrderViewModel
@{
    ViewBag.Title = "Create";
    var ko = Html.CreateKnockoutContext("OrderViewModel");
}

<h2>Create Order</h2>

<form id="addorder" action="Index">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.ClientID, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClientID", null, new { @class = "form-control", @data_bind = "value: ClientID" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <control-label class="control-label col-md-2">
                Products
                <p>@ko.Html.HyperlinkButton("Add product", "AddOrderItem", "Order")</p>
            </control-label>
            <div class="col-md-10">
                <table>
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Stock</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @using (var items = ko.Foreach(m => m.OrderItems))
                        {
                            <tr>
                                <td>@Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control" })</td>
                                <td>@items.Html.TextBox(item => item.Stock, new { @class = "form-control required number" }).UniqueName()</td>
                                <td>
                                    @ko.Html.HyperlinkButton("Delete", "DeleteOrderItem", "Order", new { index = items.GetIndex() }).Visible(m => m.OrderItems.Count > 1)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                You have asked for @ko.Html.Span(m => (m.OrderItems == null) ? 0 : m.OrderItems.Count) products
            </div>
            <div class="col-md-offset-2 col-md-10">
                @ko.Html.Button("Create", "Save", "Order", null, new { @class = "btn btn-default", @type = "submit"})
                <input value = "Create" type = "submit" class = "btn btn-default">
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")

    <script type="text/javascript">
        function saveAndSubmit() {
            @ko.ServerAction("Save", "Order")
        }
        $("addorder").validate();
    </script>

    @ko.Apply(Model)
}
